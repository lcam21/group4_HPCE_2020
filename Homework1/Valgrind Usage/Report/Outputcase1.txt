luis@luis-K53E:~/Documents$ valgrind ./case1
==8955== Memcheck, a memory error detector
==8955== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8955== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==8955== Command: ./case1
==8955== 
==8955== Invalid write of size 4
==8955==    at 0x1086D5: main (case1.c:9)
==8955==  Address 0x522d068 is 0 bytes after a block of size 40 alloc'd
==8955==    at 0x4C2FB0F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==8955==    by 0x1086A2: main (case1.c:6)
==8955== 
==8955== 
==8955== HEAP SUMMARY:
==8955==     in use at exit: 0 bytes in 0 blocks
==8955==   total heap usage: 1 allocs, 1 frees, 40 bytes allocated
==8955== 
==8955== All heap blocks were freed -- no leaks are possible
==8955== 
==8955== For counts of detected and suppressed errors, rerun with: -v
==8955== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)


Discusion del error:
 
Como se puede observar en case1.c se esta alocando un espacio de memoria equivalente a 10 enteros. Lo que el error nos esta diciendo es que se esta tratando de escribir en una zona de memoria donde no deberia. En este caso se esta tratando de alocar 4Bytes extra de lo esperado en la definicion de malloc, y son 4Bytes ya que una variable de tipo "int" equivale a 4 Bytes de memoria. 

Nos dice ademas en que linea del codigo esta sucediendo el error, lo cual esta pasando en la linea 9. Como se observa esto es un ciclo que se va a repetir 11 veces, es decir se van a alocar 11 enteros en un espacio de memoria que se habia creado unicamente con 10 espacios dispo,ibles.

Como se observa tambien nos indica que el bloque inicial es de 40 Bytes (4*10), mientras que lo que se necesitaba era un bloque de 44 Bytes.
