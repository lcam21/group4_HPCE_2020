luis@luis-K53E:~/Documents$ valgrind ./case3
==8957== Memcheck, a memory error detector
==8957== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8957== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==8957== Command: ./case3
==8957== 
==8957== 
==8957== HEAP SUMMARY:
==8957==     in use at exit: 3,600 bytes in 9 blocks
==8957==   total heap usage: 10 allocs, 1 frees, 4,000 bytes allocated
==8957== 
==8957== LEAK SUMMARY:
==8957==    definitely lost: 3,600 bytes in 9 blocks
==8957==    indirectly lost: 0 bytes in 0 blocks
==8957==      possibly lost: 0 bytes in 0 blocks
==8957==    still reachable: 0 bytes in 0 blocks
==8957==         suppressed: 0 bytes in 0 blocks
==8957== Rerun with --leak-check=full to see details of leaked memory
==8957== 
==8957== For counts of detected and suppressed errors, rerun with: -v
==8957== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

Discusion del output file:

Como se observa en el codigo fuente case3.c se estan realizando 10 asignaciones de memoria 10 veces del tamano de un entero, es decir 40000 Bytes. Al final del codigo unicamente se esta liberando un bloque de memoria de la variable a, como cada bloque es de 400 Bytes, Valgrind indica que existen aun 3600 Bytes de memoria que se perdieron ya que nunca fueron liberados.
